// Code generated by protoc-gen-go. DO NOT EDIT.
// source: agent.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	agent.proto

It has these top-level messages:
	StorageConfig
	OpenContextReq
	OpenContextResp
	CloseContextReq
	CloseContextResp
	CloseAllReq
	CloseAllResp
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type StorageConfig struct {
	AccountName string `protobuf:"bytes,1,opt,name=account_name,json=accountName" json:"account_name,omitempty"`
	AccountKey  string `protobuf:"bytes,2,opt,name=account_key,json=accountKey" json:"account_key,omitempty"`
	Container   string `protobuf:"bytes,3,opt,name=container" json:"container,omitempty"`
}

func (m *StorageConfig) Reset()                    { *m = StorageConfig{} }
func (m *StorageConfig) String() string            { return proto1.CompactTextString(m) }
func (*StorageConfig) ProtoMessage()               {}
func (*StorageConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *StorageConfig) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

func (m *StorageConfig) GetAccountKey() string {
	if m != nil {
		return m.AccountKey
	}
	return ""
}

func (m *StorageConfig) GetContainer() string {
	if m != nil {
		return m.Container
	}
	return ""
}

type OpenContextReq struct {
	Image            string         `protobuf:"bytes,1,opt,name=image" json:"image,omitempty"`
	StorageConfig    *StorageConfig `protobuf:"bytes,2,opt,name=storage_config,json=storageConfig" json:"storage_config,omitempty"`
	SourceWorktreeId string         `protobuf:"bytes,3,opt,name=source_worktree_id,json=sourceWorktreeId" json:"source_worktree_id,omitempty"`
	WorktreeId       string         `protobuf:"bytes,4,opt,name=worktree_id,json=worktreeId" json:"worktree_id,omitempty"`
	MountPoint       string         `protobuf:"bytes,5,opt,name=mount_point,json=mountPoint" json:"mount_point,omitempty"`
	AutosaveInterval uint32         `protobuf:"varint,6,opt,name=autosave_interval,json=autosaveInterval" json:"autosave_interval,omitempty"`
	Ports            []uint32       `protobuf:"varint,7,rep,packed,name=ports" json:"ports,omitempty"`
	Env              []string       `protobuf:"bytes,8,rep,name=env" json:"env,omitempty"`
	ExecConfigRoots  []string       `protobuf:"bytes,9,rep,name=execConfigRoots" json:"execConfigRoots,omitempty"`
}

func (m *OpenContextReq) Reset()                    { *m = OpenContextReq{} }
func (m *OpenContextReq) String() string            { return proto1.CompactTextString(m) }
func (*OpenContextReq) ProtoMessage()               {}
func (*OpenContextReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *OpenContextReq) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *OpenContextReq) GetStorageConfig() *StorageConfig {
	if m != nil {
		return m.StorageConfig
	}
	return nil
}

func (m *OpenContextReq) GetSourceWorktreeId() string {
	if m != nil {
		return m.SourceWorktreeId
	}
	return ""
}

func (m *OpenContextReq) GetWorktreeId() string {
	if m != nil {
		return m.WorktreeId
	}
	return ""
}

func (m *OpenContextReq) GetMountPoint() string {
	if m != nil {
		return m.MountPoint
	}
	return ""
}

func (m *OpenContextReq) GetAutosaveInterval() uint32 {
	if m != nil {
		return m.AutosaveInterval
	}
	return 0
}

func (m *OpenContextReq) GetPorts() []uint32 {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *OpenContextReq) GetEnv() []string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *OpenContextReq) GetExecConfigRoots() []string {
	if m != nil {
		return m.ExecConfigRoots
	}
	return nil
}

type OpenContextResp struct {
	ContextId     string                          `protobuf:"bytes,1,opt,name=context_id,json=contextId" json:"context_id,omitempty"`
	GrpcEndpoint  string                          `protobuf:"bytes,2,opt,name=grpc_endpoint,json=grpcEndpoint" json:"grpc_endpoint,omitempty"`
	PortEndpoints []*OpenContextResp_PortEndpoint `protobuf:"bytes,3,rep,name=port_endpoints,json=portEndpoints" json:"port_endpoints,omitempty"`
}

func (m *OpenContextResp) Reset()                    { *m = OpenContextResp{} }
func (m *OpenContextResp) String() string            { return proto1.CompactTextString(m) }
func (*OpenContextResp) ProtoMessage()               {}
func (*OpenContextResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *OpenContextResp) GetContextId() string {
	if m != nil {
		return m.ContextId
	}
	return ""
}

func (m *OpenContextResp) GetGrpcEndpoint() string {
	if m != nil {
		return m.GrpcEndpoint
	}
	return ""
}

func (m *OpenContextResp) GetPortEndpoints() []*OpenContextResp_PortEndpoint {
	if m != nil {
		return m.PortEndpoints
	}
	return nil
}

type OpenContextResp_PortEndpoint struct {
	Port     uint32 `protobuf:"varint,1,opt,name=port" json:"port,omitempty"`
	Endpoint string `protobuf:"bytes,2,opt,name=endpoint" json:"endpoint,omitempty"`
}

func (m *OpenContextResp_PortEndpoint) Reset()                    { *m = OpenContextResp_PortEndpoint{} }
func (m *OpenContextResp_PortEndpoint) String() string            { return proto1.CompactTextString(m) }
func (*OpenContextResp_PortEndpoint) ProtoMessage()               {}
func (*OpenContextResp_PortEndpoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

func (m *OpenContextResp_PortEndpoint) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *OpenContextResp_PortEndpoint) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

type CloseContextReq struct {
	ContextId string `protobuf:"bytes,1,opt,name=context_id,json=contextId" json:"context_id,omitempty"`
}

func (m *CloseContextReq) Reset()                    { *m = CloseContextReq{} }
func (m *CloseContextReq) String() string            { return proto1.CompactTextString(m) }
func (*CloseContextReq) ProtoMessage()               {}
func (*CloseContextReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CloseContextReq) GetContextId() string {
	if m != nil {
		return m.ContextId
	}
	return ""
}

type CloseContextResp struct {
}

func (m *CloseContextResp) Reset()                    { *m = CloseContextResp{} }
func (m *CloseContextResp) String() string            { return proto1.CompactTextString(m) }
func (*CloseContextResp) ProtoMessage()               {}
func (*CloseContextResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type CloseAllReq struct {
}

func (m *CloseAllReq) Reset()                    { *m = CloseAllReq{} }
func (m *CloseAllReq) String() string            { return proto1.CompactTextString(m) }
func (*CloseAllReq) ProtoMessage()               {}
func (*CloseAllReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type CloseAllResp struct {
}

func (m *CloseAllResp) Reset()                    { *m = CloseAllResp{} }
func (m *CloseAllResp) String() string            { return proto1.CompactTextString(m) }
func (*CloseAllResp) ProtoMessage()               {}
func (*CloseAllResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func init() {
	proto1.RegisterType((*StorageConfig)(nil), "proto.StorageConfig")
	proto1.RegisterType((*OpenContextReq)(nil), "proto.OpenContextReq")
	proto1.RegisterType((*OpenContextResp)(nil), "proto.OpenContextResp")
	proto1.RegisterType((*OpenContextResp_PortEndpoint)(nil), "proto.OpenContextResp.PortEndpoint")
	proto1.RegisterType((*CloseContextReq)(nil), "proto.CloseContextReq")
	proto1.RegisterType((*CloseContextResp)(nil), "proto.CloseContextResp")
	proto1.RegisterType((*CloseAllReq)(nil), "proto.CloseAllReq")
	proto1.RegisterType((*CloseAllResp)(nil), "proto.CloseAllResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AgentService service

type AgentServiceClient interface {
	OpenContext(ctx context.Context, in *OpenContextReq, opts ...grpc.CallOption) (*OpenContextResp, error)
	CloseContext(ctx context.Context, in *CloseContextReq, opts ...grpc.CallOption) (*CloseContextResp, error)
	CloseAll(ctx context.Context, in *CloseAllReq, opts ...grpc.CallOption) (*CloseAllResp, error)
}

type agentServiceClient struct {
	cc *grpc.ClientConn
}

func NewAgentServiceClient(cc *grpc.ClientConn) AgentServiceClient {
	return &agentServiceClient{cc}
}

func (c *agentServiceClient) OpenContext(ctx context.Context, in *OpenContextReq, opts ...grpc.CallOption) (*OpenContextResp, error) {
	out := new(OpenContextResp)
	err := grpc.Invoke(ctx, "/proto.AgentService/OpenContext", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentServiceClient) CloseContext(ctx context.Context, in *CloseContextReq, opts ...grpc.CallOption) (*CloseContextResp, error) {
	out := new(CloseContextResp)
	err := grpc.Invoke(ctx, "/proto.AgentService/CloseContext", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentServiceClient) CloseAll(ctx context.Context, in *CloseAllReq, opts ...grpc.CallOption) (*CloseAllResp, error) {
	out := new(CloseAllResp)
	err := grpc.Invoke(ctx, "/proto.AgentService/CloseAll", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AgentService service

type AgentServiceServer interface {
	OpenContext(context.Context, *OpenContextReq) (*OpenContextResp, error)
	CloseContext(context.Context, *CloseContextReq) (*CloseContextResp, error)
	CloseAll(context.Context, *CloseAllReq) (*CloseAllResp, error)
}

func RegisterAgentServiceServer(s *grpc.Server, srv AgentServiceServer) {
	s.RegisterService(&_AgentService_serviceDesc, srv)
}

func _AgentService_OpenContext_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenContextReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).OpenContext(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentService/OpenContext",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).OpenContext(ctx, req.(*OpenContextReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentService_CloseContext_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseContextReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).CloseContext(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentService/CloseContext",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).CloseContext(ctx, req.(*CloseContextReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentService_CloseAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseAllReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).CloseAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AgentService/CloseAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).CloseAll(ctx, req.(*CloseAllReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _AgentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.AgentService",
	HandlerType: (*AgentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "OpenContext",
			Handler:    _AgentService_OpenContext_Handler,
		},
		{
			MethodName: "CloseContext",
			Handler:    _AgentService_CloseContext_Handler,
		},
		{
			MethodName: "CloseAll",
			Handler:    _AgentService_CloseAll_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "agent.proto",
}

func init() { proto1.RegisterFile("agent.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 504 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x93, 0x41, 0x8f, 0xd2, 0x40,
	0x14, 0xc7, 0xed, 0x76, 0x59, 0xe1, 0x95, 0x02, 0x3e, 0x57, 0x6d, 0x88, 0x46, 0xec, 0x5e, 0x9a,
	0x68, 0x88, 0xc1, 0x78, 0x32, 0xd9, 0x84, 0x10, 0x0f, 0x68, 0xa2, 0x9b, 0xee, 0xc1, 0x63, 0x53,
	0xcb, 0x93, 0x34, 0x0b, 0x33, 0x65, 0x66, 0x60, 0xd9, 0x6f, 0xe8, 0xd9, 0x6f, 0xe0, 0x37, 0x31,
	0x33, 0xd3, 0x2e, 0x05, 0xc9, 0x9e, 0x98, 0xf7, 0x7f, 0xff, 0x99, 0xf7, 0xff, 0xcd, 0x50, 0xf0,
	0xd2, 0x39, 0x31, 0x35, 0x2c, 0x04, 0x57, 0x1c, 0x1b, 0xe6, 0x27, 0x5c, 0x81, 0x7f, 0xad, 0xb8,
	0x48, 0xe7, 0x34, 0xe1, 0xec, 0x57, 0x3e, 0xc7, 0x37, 0xd0, 0x4e, 0xb3, 0x8c, 0xaf, 0x99, 0x4a,
	0x58, 0xba, 0xa4, 0xc0, 0x19, 0x38, 0x51, 0x2b, 0xf6, 0x4a, 0xed, 0x5b, 0xba, 0x24, 0x7c, 0x0d,
	0x55, 0x99, 0xdc, 0xd0, 0x5d, 0x70, 0x62, 0x1c, 0x50, 0x4a, 0x5f, 0xe9, 0x0e, 0x5f, 0x42, 0x2b,
	0xe3, 0x4c, 0xa5, 0x39, 0x23, 0x11, 0xb8, 0xa6, 0xbd, 0x13, 0xc2, 0x3f, 0x27, 0xd0, 0xf9, 0x5e,
	0x10, 0x9b, 0x70, 0xa6, 0x68, 0xab, 0x62, 0x5a, 0xe1, 0x39, 0x34, 0xf2, 0x65, 0x3a, 0xaf, 0xa6,
	0xd9, 0x02, 0x3f, 0x41, 0x47, 0xda, 0x6c, 0x49, 0x66, 0xc2, 0x99, 0x51, 0xde, 0xe8, 0xdc, 0x22,
	0x0c, 0xf7, 0x82, 0xc7, 0xbe, 0xdc, 0xe3, 0x78, 0x07, 0x28, 0xf9, 0x5a, 0x64, 0x94, 0xdc, 0x72,
	0x71, 0xa3, 0x04, 0x51, 0x92, 0xcf, 0xca, 0x30, 0x3d, 0xdb, 0xf9, 0x51, 0x36, 0xa6, 0x33, 0x8d,
	0x54, 0xb7, 0x9d, 0x5a, 0xa4, 0xdb, 0x3d, 0xc3, 0xd2, 0x10, 0x17, 0x3c, 0x67, 0x2a, 0x68, 0x58,
	0x83, 0x91, 0xae, 0xb4, 0x82, 0x6f, 0xe1, 0x49, 0xba, 0x56, 0x5c, 0xa6, 0x1b, 0x4a, 0x72, 0xa6,
	0x48, 0x6c, 0xd2, 0x45, 0x70, 0x36, 0x70, 0x22, 0x3f, 0xee, 0x55, 0x8d, 0x69, 0xa9, 0x6b, 0xde,
	0x82, 0x0b, 0x25, 0x83, 0xc7, 0x03, 0x37, 0xf2, 0x63, 0x5b, 0x60, 0x0f, 0x5c, 0x62, 0x9b, 0xa0,
	0x39, 0x70, 0xa3, 0x56, 0xac, 0x97, 0x18, 0x41, 0x97, 0xb6, 0x94, 0x95, 0x84, 0x9c, 0x2b, 0x19,
	0xb4, 0x4c, 0xf7, 0x50, 0x0e, 0xff, 0x3a, 0xd0, 0xdd, 0xbb, 0x54, 0x59, 0xe0, 0x2b, 0x80, 0xcc,
	0x96, 0x9a, 0xc9, 0xd9, 0xbd, 0x03, 0x6d, 0xd5, 0x74, 0x86, 0x17, 0xe0, 0xcf, 0x45, 0x91, 0x25,
	0xc4, 0x66, 0x16, 0xca, 0x3e, 0x64, 0x5b, 0x8b, 0x9f, 0x4b, 0x0d, 0xbf, 0x40, 0x47, 0x87, 0xbb,
	0x37, 0xc9, 0xc0, 0x1d, 0xb8, 0x91, 0x37, 0xba, 0x28, 0xdf, 0xe0, 0x60, 0xe6, 0xf0, 0x8a, 0x0b,
	0x55, 0x6d, 0x8e, 0xfd, 0xa2, 0x56, 0xc9, 0xfe, 0x25, 0xb4, 0xeb, 0x6d, 0x44, 0x38, 0xd5, 0x06,
	0x93, 0xcc, 0x8f, 0xcd, 0x1a, 0xfb, 0xd0, 0x3c, 0xc8, 0x73, 0x5f, 0x87, 0xef, 0xa1, 0x3b, 0x59,
	0x70, 0x49, 0xb5, 0x3f, 0xce, 0xc3, 0x88, 0x21, 0x42, 0x6f, 0x7f, 0x87, 0x2c, 0x42, 0x1f, 0x3c,
	0xa3, 0x8d, 0x17, 0x8b, 0x98, 0x56, 0x61, 0x07, 0xda, 0xbb, 0x52, 0x16, 0xa3, 0xdf, 0x0e, 0xb4,
	0xc7, 0xfa, 0x3b, 0xb9, 0x26, 0xb1, 0xc9, 0x33, 0xc2, 0x4b, 0xf0, 0x6a, 0x90, 0xf8, 0xec, 0x18,
	0xf8, 0xaa, 0xff, 0xfc, 0xf8, 0x7d, 0x84, 0x8f, 0x70, 0x5c, 0x0e, 0xa8, 0x0e, 0xa8, 0x9c, 0x07,
	0x28, 0xfd, 0x17, 0x47, 0x75, 0x73, 0xc4, 0x47, 0x68, 0x56, 0x19, 0x11, 0xeb, 0x36, 0xcb, 0xd0,
	0x7f, 0xfa, 0x9f, 0xa6, 0xb7, 0xfd, 0x3c, 0x33, 0xea, 0x87, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x7a, 0xc1, 0x9e, 0x0f, 0xf8, 0x03, 0x00, 0x00,
}
